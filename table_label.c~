#include <stdlib.h>
#include <stdio.h>
#include <string.h>

typedef struct Label Label;
struct Label {
	int nom;
	int adr_memoire;
	int init; 
};

typedef struct Element Element;
struct Element
{
	Label lab;
	Element *suivant ;
};

typedef struct Liste Liste;
struct Liste
{
	Element *premier;
	Element *dernier;
	int nb_element;
};

Liste * initialisation()
{
	Liste *liste = malloc(sizeof(Liste));
	memset(liste, 0, sizeof(Liste));
	liste->premier = NULL;
    return liste;
}


int insertion(Liste *liste, Label nvLab)
{
	/* Création du nouvel élément */
	Element *nouveau = malloc(sizeof(*nouveau));
	if (liste == NULL)
	{
	    exit(EXIT_FAILURE);
	}
	nouveau->lab = nvLab;

	/* Insertion de l'élément au début de la liste */
	Element *aux = liste->premier;
	if(aux==NULL){
		liste->premier = nouveau;
		liste->dernier = nouveau;
		nouveau->lab.adr_memoire = 0;
		liste->nb_element = 1;
	}
	else{
		/* Verification que la variable n'est pas deja declarée */	
		while ((aux != NULL) && (aux->lab.nom != nvLab.nom)) {
			aux = aux->suivant;
		}
		if (aux ==  NULL) {
			aux->suivant = nouveau;
			liste->dernier = nouveau;
			nouveau->lab.adr_memoire = liste->nb_element;
			liste->nb_element++;
			nouveau->suivant = NULL;	
		} else {
			fprintf(stderr, "ERROR : Label deja dans la table\n");
			exit(-1);
		}
	}
	return lab.adr_memoire;
}

void update_addr(){
	
}
int main(){
	return 0;
}

	
